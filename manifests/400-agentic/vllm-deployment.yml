---
apiVersion: v1
kind: Service
metadata:
  name: mistral
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/app-metrics: "true"
    prometheus.io/port: "8080"
  labels:
    model: mistral7b
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    model: mistral7b
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mistral
  labels:
    model: mistral7b
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      model: mistral7b
  template:
    metadata:
      labels:
        model: mistral7b
    spec:
      tolerations:
        - effect: NoSchedule
          key: nvidia.com/gpu
          operator: Exists
      nodeSelector:
        nvidia.com/gpu.present: "true"
      initContainers:
        - name: model-loader
          image: busybox:1.36
          command: ['sh', '-c', 'cp -r /models/mistral-7b-v0-3 /ram-models/ && echo "Model copied to RAM"']
          volumeMounts:
            - name: fsx-storage
              mountPath: /models
              readOnly: true
            - name: ram-storage
              mountPath: /ram-models
          resources:
            requests:
              cpu: 6
              memory: 32Gi
            limits:
              cpu: 6
              memory: 32Gi
      containers:
        - name: vllm
          image: public.ecr.aws/deep-learning-containers/vllm:0.9.0-gpu-py312-ec2
          imagePullPolicy: IfNotPresent
          args:
            - '--port=8080'
            - '--model=/ram-models/mistral-7b-v0-3'
            - '--tokenizer_mode=auto'
            - '--trust-remote-code'
            - '--gpu_memory_utilization=0.90'
            - '--max-model-len=2048'
            - '--tensor-parallel-size=1'
            - '--max-num-batched-tokens=8192'
            - '--max-num-seqs=256'
            - '--block-size=16'
            - '--enforce-eager'
            - '--swap-space=16'
            - '--disable-custom-all-reduce'
            - '--config-format=mistral'
            - '--enable-auto-tool-choice'
            - '--tool-call-parser=mistral'
          env:
            - name: CUDA_LAUNCH_BLOCKING
              value: "1"
            - name: PYTORCH_CUDA_ALLOC_CONF
              value: "max_split_size_mb:512"
            - name: VLLM_ATTENTION_BACKEND
              value: "FLASHINFER"
          ports:
            - containerPort: 8080
              protocol: TCP
              name: http
          resources:
            requests:
              cpu: 6
              memory: 32Gi
              nvidia.com/gpu: 1
            limits:
              cpu: 6
              memory: 32Gi
              nvidia.com/gpu: 1
          volumeMounts:
            - name: ram-storage
              mountPath: /ram-models
      volumes:
        - name: fsx-storage
          persistentVolumeClaim:
            claimName: fsx-models
        - name: ram-storage
          emptyDir:
            medium: Memory
            sizeLimit: 20Gi
